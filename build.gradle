allprojects {
    repositories {
        mavenCentral()
        jcenter()
        maven { url = 'https://jitpack.io' }
        maven { url 'http://oss.sonatype.org/content/repositories/snapshots' }
    }

    buildscript {
        repositories {
            mavenCentral()
            jcenter()
        }
    }

    /**
     * Prevents sporadic compilation error: 'Bad service configuration file, or exception thrown while constructing
     * Processor object: javax.annotation.processing.Processor: Error reading configuration file'
     *
     * See https://discuss.gradle.org/t/gradle-not-compiles-with-solder-tooling-jar/7583/20
     */
    tasks.withType(JavaCompile) { options.fork = true }
}

// Skip pre-dexing when running on Travis CI or when disabled via -Dpre-dex=false.
project.ext.isCi = "true".equals(System.getenv("CI"))
project.ext.preDexEnabled = "true".equals(System.getProperty("pre-dex", "true"))
project.plugins.whenPluginAdded { plugin ->
    if ("com.android.build.gradle.AppPlugin".equals(plugin.class.name)) {
        project.android.dexOptions.preDexLibraries = rootProject.ext.preDexEnabled && !rootProject.ext.isCi
    } else if ("com.android.build.gradle.LibraryPlugin".equals(plugin.class.name)) {
        project.android.dexOptions.preDexLibraries = rootProject.ext.preDexEnabled && !rootProject.ext.isCi
    }
}

ext.kotlin_version = '1.0.0'

ext.deps = [
    // Intellij
    intellijAnnotations: 'com.intellij:annotations:+@jar',

    // Android
    appCompat: 'com.android.support:appcompat-v7:23.1.1',
    design: 'com.android.support:design:23.1.1',

    // Square
    javapoet: 'com.squareup:javapoet:1.4.0',

    // Auto
    autovalue: 'com.google.auto.value:auto-value:1.2-SNAPSHOT',
    autocommon: 'com.google.auto:auto-common:0.5',
    autoservice: 'com.google.auto.service:auto-service:1.0-rc2',

    // Test dependencies
    junit: 'junit:junit:4.12',
    truth: 'com.google.truth:truth:0.27',
    compiletesting: 'com.google.testing.compile:compile-testing:0.7',
]

task clean(type: Delete) {
    delete rootProject.buildDir
}
